{"version":3,"sources":["reportWebVitals.js","components/NameAdd/NameAdd.js","components/NameAdd/index.js","data/actions/actions.js","components/NameList/NameList.js","components/NameList/index.js","components/StarterPage/StarterPage.js","components/Tournament/Tournament.js","components/Tournament/index.js","components/InitialRound/InitialRound.js","components/InitialRound/index.js","components/Games/Games.js","components/Games/index.js","components/App/App.js","components/App/index.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PlayerForm","props","state","name","error","games","handleChangeName","bind","handleSubmit","e","this","setState","currentTarget","value","preventDefault","addPlayer","Form","className","onSubmit","Group","controlId","Control","type","placeholder","onChange","Button","variant","Component","connect","players","dispatch","player","NameAdd","PlayerList","handleClear","handleGenerate","handleDeleteLast","map","index","length","onClick","NameList","StarterPage","startGame","class","to","Tournament","teamA","teamB","matches","handleShuffle","displayMatches","match","matchOrder","playerOne","playerTwo","playerOneButton","playerTwoButton","InitialRound","playerNameClickHandler","console","log","winners","addWinner","endTournament","generateWinners","handleClickincrease","counter","handleNextRound","handleClickincrease2","counter2","target","style","color","nameArrayMap","slice","howManyRounds","isEndTournament","round","generateInitialPairs","winner","Games","submitted","App","exact","path","component","initial","shuffle","arr","i","j","Math","floor","random","temp","reducer","action","log2","reduce","push","generateTeams","pop","deletePlayer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54a6205e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport \"../css/Settings.css\"\n\nclass PlayerForm extends Component {\n\n     constructor(props) {\n          super(props);\n\n          this.state = { \n               name: '',\n               error: '',\n               games: false,\n          };\n\n          this.handleChangeName = this.handleChangeName.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);\n     };\n\n     handleChangeName(e) {\n          this.setState({ name: e.currentTarget.value });\n     };\n     // this is the setting the name state as the current value of the user intput\n\n\n     handleSubmit(e){\n          e.preventDefault();\n               this.props.addPlayer(this.state.name);\n               this.setState({name: \"\"});\n               this.setState({games: true})\n     };\n     // this method when submitted will be using the addPlayer method, this is mentioned in MapDispatchToProps \n     // pulled in as a prop to this.state.name which is an empty string.\n     // this.setState is resetting the input to be an empty string after the add button is clicked\n\n     \n     render() {\n          return (\n               <>\n                    <Form className=\"container\" onSubmit={ this.handleSubmit }>\n                         <Form.Group controlId=\"playerName\">\n                              <h2>Add Players</h2>\n                              <div className=\"d-flex\">\n                                   <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Enter player name...\" \n                                        value={ this.state.name } \n                                        onChange={ this.handleChangeName }  \n                                   />\n                                   <Button \n                                        variant=\"outline-light\" \n                                        type=\"submit\" \n                                        className=\"buttonAdd\">\n                                        Add\n                                   </Button>\n                              </div>\n                              <p className=\"error\">{ this.state.error }</p> \n                         </Form.Group>\n                    </Form>\n               </>\n          );\n     }; \n};\n\nexport default PlayerForm;","import { connect } from 'react-redux';\nimport NameAdd from './NameAdd';\nimport { addPlayer} from '../../data/actions/actions';\n\nconst mapStateToProps = state => {\n     return {\n          players: state.players,\n          games: state.games // we are assiging the prop players to the state value of players\n     };\n};\n\nconst mapDispatchtoProps = dispatch => {\n     return{\n          addPlayer: (player) => dispatch(addPlayer(player)),\n          // we are dispatching the addPlayer method which is mentioned\n          // in the NameAdd file\n     }\n};\n//mapStateToProps connects the props to state\n//mapDispatchtoProps just dispatches the prop\nexport default connect(mapStateToProps, mapDispatchtoProps)(NameAdd);","export const addPlayer = (player) => {\n  return {\n    type: \"addPlayer\",\n    players: player,\n  };\n};\n\nexport const clearList = () => {\n  return {\n    type: \"clearList\",\n  };\n};\n\nexport const generateTeams = () => {\n  return {\n    type: \"generateTeams\",\n  };\n};\n\nexport const deletePlayer = () => {\n  return {\n    type: \"deletePlayer\",\n  };\n};\n\nexport const startGame = () => {\n  return {\n    type: \"startGame\",\n  };\n};\nexport const generateInitialPairs = () => {\n  return {\n    type: \"generateInitialPairs\",\n  };\n};\n\nexport const generateWinners = () => {\n  return {\n    type: \"generateWinners\",\n  };\n};\n\nexport const endTournament = () => {\n  return {\n    type: \"endTournament\",\n  };\n};\n\nexport const addWinner = (winner) => {\n  return {\n    type: \"addWinner\",\n    winner,\n  };\n};\n","import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport \"../css/Settings.css\"\n\nclass PlayerList extends Component {\n\n     constructor(props) {\n          super(props);\n\n          this.state = { \n               players: this.props.players,\n          };\n\n          this.handleClear = this.handleClear.bind(this);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.handleDeleteLast = this.handleDeleteLast.bind(this);\n     }\n\n     handleClear(){\n          this.props.handleClear();\n     }\n\n     handleGenerate(){\n          this.props.handleGenerate();\n     }\n\n     handleDeleteLast(){\n          this.props.handleDeleteLast();\n          this.setState({ \n               players: this.props.players \n          })\n     }\n\n     render() {\n\n          let players = this.props.players;\n          \n          return (\n               <>\n                    <div className=\"container player-list\">\n                         <h2 className=\"headerPlayers\">Current Players:</h2> \n                         <ul>\n                              { players.map((value, index) => (\n                                   <li key={ index }>\n                                        <h3 className=\"names\">{ value }</h3>\n                                   </li> \n                              ))}\n                         </ul>\n                    </div>\n\n                    { players.length > 0 ? \n                         <div className=\"container\">\n                              <div className=\"nameListButtonsGroup\">\n                                   <Button \n                                        onClick={ this.handleDeleteLast }\n                                        variant=\"outline-light\" \n                                        className=\"nameListButtons \">\n                                        Delete Last Player\n                                   </Button>\n                                   \n                                   <Button \n                                        onClick={ this.handleClear }\n                                        variant=\"outline-light\" \n                                        className=\"nameListButtons\">\n                                        Clear Players\n                                   </Button>\n                              </div>\n\n                              { players.length > 3 ?\n                                   <Button \n                                        onClick={ this.handleGenerate }\n                                        variant=\"outline-light\" \n                                        className=\"nameListButtons\">\n                                        Generate Teams\n                                   </Button>\n                              : null }\n                         </div>\n                    : null }\n               </>\n          )\n     }\n};\n\nexport default PlayerList;","\nimport { connect } from 'react-redux';\nimport NameList from './NameList';\nimport { clearList, generateTeams, deletePlayer } from '../../data/actions/actions';\n\nconst mapStateToProps = state => {\n     return {\n          players: state.players,\n     }\n};\n\nconst mapDispatchToProps = dispatch => {\n     return {\n          handleClear: () => dispatch(clearList()),\n          handleGenerate: () => dispatch(generateTeams()),\n          handleDeleteLast: () => dispatch(deletePlayer()),\n     };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameList);","import {Component} from \"react\"\nimport { Link } from \"react-router-dom\";\nimport \"./StarterPage.css\"\nclass StarterPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n        };\n                  this.startGame = this.startGame.bind(this);\n    }\n\n    startGame(){\n        this.setState(this.startGame);\n    }\n\n    render() {\n        return (\n            <div className = \"container\">\n            <h1 className=\"title\">Table Tennis Tournament Generator </h1>\n            <div class=\"wrapper\">\n                <div class=\"left_wall\"></div>\n                <div class=\"ball\"></div>\n                <div class=\"right_wall\"></div>\n                <div class=\"net\"></div>\n                <div class=\"clear\"></div>\n            </div>\n            <button className=\"buttonSpace\">\n            <Link className=\"button\" to=\"/Settings\">Start Here</Link>\n            </button>\n            </div>\n        );\n    }\n}\n\nexport default StarterPage;","import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport \"../css/Tournament.css\"\nimport {Link} from \"react-router-dom\"\n\nclass Tournament extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = { \n               teamA: this.props.teamA,\n               teamB: this.props.teamB,\n               players: this.props.players,\n               matches: this.props.matches\n          };\n\n          this.handleShuffle = this.handleShuffle.bind(this);\n     }\n\n     handleShuffle(){\n     this.props.handleShuffle();\n     }\n\n\n     render() {\n          let matches = this.props.matches\n          const displayMatches = matches.map((match, index) => {\n               const matchOrder = index + 1;\n               const playerOne = match[0];\n               const playerTwo = match[1];\n               const playerOneButton = <button className=\"playerButton\">{playerOne}</button>\n               const playerTwoButton = <button className=\"playerButton\">{playerTwo}</button>\n               return <h1 className=\"pairs\" key={index}>Match {matchOrder} : {playerOneButton} vs {playerTwoButton}</h1>\n          })\n\n          return (\n               <>\n                    <div>\n                         <div className=\"container\">\n                              <h1 className=\"header\">The Games are...</h1>\n                              {displayMatches}\n                         </div>\n                    </div>\n\n                    <div className=\"container\">\n                         <Button \n                              onClick={ this.handleShuffle }\n                              variant=\"outline-light\" \n                              className=\"shuffleButton\">\n                              Re-Shuffle\n                         </Button>\n                         <button className=\"shuffleButton\"><Link to=\"/initialround\">Start Tournament</Link></button>\n                    </div>\n               </>\n          )\n     }\n};\n\nexport default Tournament;","import { connect } from 'react-redux';\nimport Tournament from './Tournament';\nimport {generateTeams} from \"../../data/actions/actions\"\nconst mapStateToProps = state => {\n     return {\n          teamA: state.teamA,\n          teamB: state.teamB,\n          players: state.players,\n          matches: state.matches\n     }\n};\n\nconst mapDispatchToProps = dispatch => {\n     return {\n          handleShuffle: () => dispatch(generateTeams()),\n     };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tournament);","import { Component } from \"react\";\nclass InitialRound extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickincrease = this.handleClickincrease.bind(this);\n    this.handleClickincrease2 = this.handleClickincrease2.bind(this);\n  }\n\n  playerNameClickHandler = (name) => {\n    console.log(\"name handler\", name);\n    if (this.props.winners.length === this.props.matches.length) {\n      return;\n    }\n    this.props.addWinner(name);\n    if (this.props.games === 1) {\n      this.props.endTournament();\n    }\n  };\n  generateWinners = () => this.props.generateWinners();\n\n  handleClickincrease = () => {\n    if (this.state.counter < 21) {\n      // if the counter is less than the props max(which is 20) add one\n      // but stop at 20\n      this.setState({\n        counter: this.state.counter + 1, // adds one to the counter\n      });\n      console.log(this.state.counter);\n    }\n  };\n\n  handleClickincrease2() {\n    if (this.state.counter < 21) {\n      // if the counter is less than the props max(which is 20) add one\n      // but stop at 20\n      this.setState({\n        counter2: this.state.counter2 + 1, // adds one to the counter\n      });\n      console.log();\n    }\n  }\n  changeColor(e) {\n    e.target.style.color = \"black\";\n  }\n\n  handleNextRound = () => {\n    this.props.generateWinners();\n  };\n\n  render() {\n    console.log(\"render\");\n    let games = this.props.games;\n    let matches = this.props.matches;\n\n    const displayMatches = matches.map((match, index) => {\n      const matchOrder = index + 1;\n      const playerOne = match[0];\n      const playerTwo = match[1];\n      const playerOneButton = (\n        <button\n          onClick={() => this.playerNameClickHandler(playerOne)}\n          className=\"playerButton\"\n        >\n          {playerOne}\n        </button>\n      );\n      const playerTwoButton = (\n        <button\n          onClick={() => this.playerNameClickHandler(playerTwo)}\n          className=\"playerButton\"\n        >\n          {playerTwo}\n        </button>\n      );\n      return (\n        <h1 className=\"pairs\" key={index}>\n          Match {matchOrder} : {playerOneButton} vs {playerTwoButton}\n        </h1>\n      );\n    });\n\n    let nameArrayMap = this.props.winners\n      .slice(0, this.props.matches.length)\n      .map((name, index) => {\n        return (\n          <h1 key={index} className=\"pairs\">\n            {name}\n          </h1>\n        );\n      });\n    const howManyRounds = (games) => {\n      return games === 1\n        ? \"Final\"\n        : games === 2\n        ? \"Semi Finals\"\n        : games === 4\n        ? \"Quarter Finals\"\n        : `Tournament Begins`;\n    };\n\n    return (\n      <div className=\"initialRoundContainer\">\n        <h1 className=\"TournamentHeading\">{howManyRounds(games)}</h1>\n        <div>{displayMatches}</div>\n        <h1 className=\"TournamentHeading\">The Winners Are:</h1>\n        <h1 className=\"generateWinners\">{nameArrayMap}</h1>\n        {this.props.isEndTournament ? (\n          <p>This is the end, the winner is {this.props.winners[0]}</p>\n        ) : (\n          <h1 onClick={this.handleNextRound} className=\"generateWinners\">\n            Next Round\n          </h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default InitialRound;\n","import { connect } from \"react-redux\";\nimport {\n  endTournament,\n  generateInitialPairs,\n  generateWinners,\n  addWinner,\n} from \"../../data/actions/actions\";\nimport InitialRound from \"./InitialRound\";\nconst mapStateToProps = (state) => {\n  return {\n    players: state.players,\n    games: state.games,\n    matches: state.matches,\n    winners: state.winners,\n    round: state.round,\n    isEndTournament: state.isEndTournament,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    generateInitialPairs: () => dispatch(generateInitialPairs()),\n    generateWinners: () => dispatch(generateWinners()),\n    endTournament: () => dispatch(endTournament()),\n    addWinner: (winner) => dispatch(addWinner(winner)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialRound);\n","import React, { Component } from \"react\";\n\n\nclass Games extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n    render() {\n        return (\n            <h1>Hello</h1>\n        );\n    }\n}\n\nexport default Games;","import { connect } from \"react-redux\";\nimport Games from \"./Games\";\nconst mapStateToProps = state => {\n    return {\n        submitted: state.submitted\n    }\n}\nexport default connect(mapStateToProps)(Games);","import {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport NameAdd from \"../NameAdd\"\nimport NameList from \"../NameList\"\nimport StarterPage from \"../StarterPage/StarterPage\"\nimport Tournament from \"../Tournament\"\nimport InitialRound from \"../InitialRound\"\nimport Games from \"../Games\"\n// import Test from \"../TestPage/Test\"\nconst App = ({submitted}) => {\n\n    return (\n        <Router> \n        <>\n        {/* <Route exact path=\"/test\">\n        <Test />\n        </Route> */}\n        <Route exact path=\"/\">\n        <StarterPage />\n        </Route>\n        </>\n        <Route exact path=\"/Settings\">\n        {!submitted ?\n            <>\n            <NameAdd />\n            <NameList />\n            </>\n            :\n            <>\n            <Tournament />\n            </>\n        }\n        </Route>\n        <Route path=\"/initialround\" component={InitialRound} /> \n        <Route path=\"/Games\" component={Games} /> \n    </Router>\n    )\n};\n\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport App from \"./App\";\nconst mapStateToProps = state => {\n    return {\n        submitted: state.submitted\n    }\n}\nexport default connect(mapStateToProps)(App);","const initial = {\n  players: [],\n  games: 0,\n  submitted: false,\n  startGame: false,\n  winner: 0,\n  matches: [],\n  winners: [],\n  round: false,\n  isEndTournament: false,\n};\n\nexport default initial;","import initial from \"./initial\";\n\nconst addPlayer = (state, action) => {\n  return {\n    ...state,\n    players: [...state.players, action.players],\n  };\n};\nconst startGame = (state) => {\n  return {\n    startGame: state.startGame,\n  };\n};\nconst clearList = () => ({\n  ...initial,\n});\n\nfunction removeLastItem(arr) {\n  arr.pop();\n  return arr;\n}\n\nconst deletePlayer = (state) => ({\n  ...state,\n  players: removeLastItem(state.players),\n});\n\n// Fisher-Yates Shuffle Method\nfunction shuffle(arr) {\n  for (let i = arr.length - 1; i > 0; i -= 1) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  return arr;\n}\n\nconst generateWinners = (state) => ({\n  ...state,\n  winners: [],\n  players: shuffle(state.winners),\n  round: true,\n  games: state.games - 1,\n  matches: state.winners.reduce(function (matches, value, index, winners) {\n    if (index % 2 === 0) matches.push(winners.slice(index, index + 2));\n    return matches;\n  }, []),\n});\n\nconst generateTeams = (state) => ({\n  ...state,\n  players: shuffle(state.players),\n  games: Math.log2(state.players.length),\n  submitted: true,\n  matches: state.players.reduce(function (matches, value, index, players) {\n    if (index % 2 === 0) matches.push(players.slice(index, index + 2));\n    return matches;\n  }, []),\n});\n\nconst reducer = (state, action) => {\n  // depending on what the actions type property is, we can do different things with it\n  switch (action.type) {\n    case \"addPlayer\":\n      return addPlayer(state, action);\n    case \"clearList\":\n      return clearList();\n    case \"generateTeams\":\n      return generateTeams(state, action);\n    case \"deletePlayer\":\n      return deletePlayer(state, action);\n    case \"startGame\":\n      return startGame(state, action);\n    case \"shuffle\":\n      return shuffle(state, action);\n    case \"generateWinners\":\n      return generateWinners(state, action);\n    case \"endTournament\":\n      return {\n        ...state,\n        isEndTournament: true,\n      };\n    case \"addWinner\":\n      return {\n        ...state,\n        winners: [...state.winners, action.winner],\n      };\n    default:\n      return state;\n    // current state and the action object passed through from actions.js\n  }\n};\n\nexport default reducer;\n","\nimport { createStore, compose, applyMiddleware } from \"redux\"\nimport reducer from \"./reducer\"\nimport initial from \"./initial\"\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initial, composeEnhancers(applyMiddleware((thunk))));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./components/App\"\nimport store from \"./data/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}