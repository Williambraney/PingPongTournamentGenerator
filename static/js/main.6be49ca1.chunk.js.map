{"version":3,"sources":["reportWebVitals.js","components/NameAdd/NameAdd.js","components/NameAdd/index.js","data/actions/actions.js","components/NameList/NameList.js","components/NameList/index.js","components/StarterPage/StarterPage.js","components/StarterPage/index.js","components/Tournament/Tournament.js","components/Tournament/index.js","components/Round/Round.js","components/Round/index.js","components/App/App.js","components/App/index.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NameAdd","props","state","name","error","games","handleChangeName","bind","handleSubmit","e","this","setState","currentTarget","value","preventDefault","addPlayer","Form","className","onSubmit","Group","controlId","Control","type","placeholder","onChange","Button","variant","Component","connect","players","dispatch","player","PlayerList","handleClear","handleGenerate","handleDeleteLast","map","index","length","onClick","NameList","StarterPage","startGame","to","Tournament","teamA","teamB","matches","handleShuffle","displayMatches","match","matchOrder","playerOne","playerTwo","playerOneButton","playerTwoButton","Round","playerNameClickHandler","winners","addWinner","endTournament","generateWinners","handleNextRound","newTournament","window","location","reload","nameArrayMap","slice","isEndTournament","muted","autoPlay","loop","id","playbackRate","src","process","howManyRounds","round","generateInitialPairs","winner","App","submitted","exact","path","component","initial","shuffle","arr","i","j","Math","floor","random","temp","reducer","action","log2","reduce","push","generateTeams","pop","deletePlayer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6be49ca1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport \"../css/Settings.css\"\n\nclass NameAdd extends Component {\n\n     constructor(props) {\n          super(props);\n\n          this.state = { \n               name: '',\n               error: '',\n               games: false,\n          };\n\n          this.handleChangeName = this.handleChangeName.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);\n     };\n\n     handleChangeName(e) {\n          this.setState({ name: e.currentTarget.value });\n     };\n     // this is the setting the name state as the current value of the user intput\n\n\n     handleSubmit(e){\n          e.preventDefault();\n               this.props.addPlayer(this.state.name);\n               this.setState({name: \"\"});\n               this.setState({games: true})\n     };\n     // this method when submitted will be using the addPlayer method, this is mentioned in MapDispatchToProps \n     // pulled in as a prop to this.state.name which is an empty string.\n     // this.setState is resetting the input to be an empty string after the add button is clicked\n\n     \n     render() {\n          return (\n               <>\n                    <Form className=\"container\" onSubmit={ this.handleSubmit }>\n                         <Form.Group controlId=\"playerName\">\n                              <h2 className=\"addHeader\" >Add Players</h2>\n                              <h2 className=\"addHeader\">Minimum 4 players. Players needs to be a power of 2 (i.e. 4, 8, 16, 32 ...)</h2>   \n                              <div className=\"d-flex\">\n                                   <Form.Control \n                                        type=\"text\" \n                                        placeholder=\"Enter player name...\" \n                                        value={ this.state.name } \n                                        onChange={ this.handleChangeName }  \n                                   />\n                                   <Button \n                                        variant=\"outline-light\" \n                                        type=\"submit\" \n                                        className=\"buttonAdd\">\n                                        Add\n                                   </Button>\n                              </div>\n                         </Form.Group>\n                    </Form>\n               </>\n          );\n     }; \n};\n\nexport default NameAdd;","import { connect } from 'react-redux';\nimport NameAdd from './NameAdd';\nimport { addPlayer} from '../../data/actions/actions';\n\nconst mapStateToProps = state => {\n     return {\n          players: state.players,\n          games: state.games // we are assiging the prop players to the state value of players\n     };\n};\n\nconst mapDispatchtoProps = dispatch => {\n     return{\n          addPlayer: (player) => dispatch(addPlayer(player)),\n          // we are dispatching the addPlayer method which is mentioned\n          // in the NameAdd file\n     }\n};\n//mapStateToProps connects the props to state\n//mapDispatchtoProps just dispatches the prop\nexport default connect(mapStateToProps, mapDispatchtoProps)(NameAdd);","export const addPlayer = (player) => {\n  return {\n    type: \"addPlayer\",\n    players: player,\n  };\n};\n\nexport const clearList = () => {\n  return {\n    type: \"clearList\",\n  };\n};\n\nexport const generateTeams = () => {\n  return {\n    type: \"generateTeams\",\n  };\n};\n\nexport const deletePlayer = () => {\n  return {\n    type: \"deletePlayer\",\n  };\n};\n\nexport const startGame = () => {\n  return {\n    type: \"startGame\",\n  };\n};\nexport const generateInitialPairs = () => {\n  return {\n    type: \"generateInitialPairs\",\n  };\n};\n\nexport const generateWinners = () => {\n  return {\n    type: \"generateWinners\",\n  };\n};\n\nexport const endTournament = () => {\n  return {\n    type: \"endTournament\",\n  };\n};\n\nexport const addWinner = (winner) => {\n  return {\n    type: \"addWinner\",\n    winner,\n  };\n};\n\nexport const newTournament = () => {\n  return {\n    type: \"newTournament\",\n  };\n};","import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport \"../css/Settings.css\"\n\nclass PlayerList extends Component {\n\n     constructor(props) {\n          super(props);\n\n          this.state = { \n               players: this.props.players,\n          };\n\n          this.handleClear = this.handleClear.bind(this);\n          this.handleGenerate = this.handleGenerate.bind(this);\n          this.handleDeleteLast = this.handleDeleteLast.bind(this);\n     }\n\n     handleClear(){\n          this.props.handleClear();\n     }\n\n     handleGenerate(){\n          this.props.handleGenerate();\n     }\n\n     handleDeleteLast(){\n          this.props.handleDeleteLast();\n          this.setState({ \n               players: this.props.players \n          })\n     }\n\n     render() {\n\n          let players = this.props.players;\n          \n          return (\n               <>\n                    <div className=\"container player-list\">\n                         <h2 className=\"headerPlayers\">Current Players:</h2> \n                         <ul>\n                              { players.map((value, index) => (\n                                   <li key={ index }>\n                                        <h3 className=\"names\">{ value }</h3>\n                                   </li> \n                              ))}\n                         </ul>\n                    </div>\n\n                    { players.length > 0 ? \n                         <div className=\"container\">\n                              <div className=\"nameListButtonsGroup\">\n                                   <Button \n                                        onClick={ this.handleDeleteLast }\n                                        variant=\"outline-light\" \n                                        className=\"nameListButtons \">\n                                        Delete Last Player\n                                   </Button>\n                                   \n                                   <Button \n                                        onClick={ this.handleClear }\n                                        variant=\"outline-light\" \n                                        className=\"nameListButtons\">\n                                        Clear Players\n                                   </Button>\n                              </div>\n\n                              { players.length > 3 ?\n                                   <Button \n                                        onClick={ this.handleGenerate }\n                                        variant=\"outline-light\" \n                                        className=\"nameListButtons\">\n                                        Generate Teams\n                                   </Button>\n                              : null }\n                         </div>\n                    : null }\n               </>\n          )\n     }\n};\n\nexport default PlayerList;","\nimport { connect } from 'react-redux';\nimport NameList from './NameList';\nimport { clearList, generateTeams, deletePlayer } from '../../data/actions/actions';\n\nconst mapStateToProps = state => {\n     return {\n          players: state.players,\n     }\n};\n\nconst mapDispatchToProps = dispatch => {\n     return {\n          handleClear: () => dispatch(clearList()),\n          handleGenerate: () => dispatch(generateTeams()),\n          handleDeleteLast: () => dispatch(deletePlayer()),\n     };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameList);","import {Component} from \"react\"\nimport { Link } from \"react-router-dom\";\nimport \"../css/StarterPage.css\"\nclass StarterPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n        };\n                  this.startGame = this.startGame.bind(this);\n    }\n\n    startGame(){\n        this.setState(this.startGame);\n    }\n\n    render() {\n        return (\n            <div className = \"container\">\n            <h1 className=\"title\">Table Tennis Tournament Generator </h1>\n            <div className=\"wrapper\">\n                <div className=\"left_wall\"></div>\n                <div className=\"ball\"></div>\n                <div className=\"right_wall\"></div>\n                <div className=\"net\"></div>\n                <div className=\"clear\"></div>\n            </div>\n            <button className=\"buttonSpace\">\n            <Link className=\"button\" to=\"/Settings\">Start Here</Link>\n            </button>\n            </div>\n        );\n    }\n}\n\nexport default StarterPage;","import { connect } from 'react-redux';\nimport { startGame } from '../../data/actions/actions';\nimport StarterPage from \"./StarterPage\"\n\nconst mapStateToProps = state => {\n     return {\n         startGame: state.startGame\n     };\n};\nconst mapDispatchToProps = dispatch => {\n     return {\n          startGame: () => dispatch(startGame()),\n     };\n};\n\n\n//mapStateToProps connects the props to state\n//mapDispatchtoProps just dispatches the prop\nexport default connect(mapStateToProps, mapDispatchToProps)(StarterPage);","import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport \"../css/Tournament.css\"\nimport {Link} from \"react-router-dom\"\n\nclass Tournament extends Component {\n\n     constructor(props) {\n          super(props);\n          this.state = { \n               teamA: this.props.teamA,\n               teamB: this.props.teamB,\n               players: this.props.players,\n               matches: this.props.matches\n          };\n\n          this.handleShuffle = this.handleShuffle.bind(this);\n     }\n\n     handleShuffle(){\n     this.props.handleShuffle();\n     }\n\n\n     render() {\n          let matches = this.props.matches\n          const displayMatches = matches.map((match, index) => {\n               const matchOrder = index + 1;\n               const playerOne = match[0];\n               const playerTwo = match[1];\n               const playerOneButton = <button className=\"playerButton\">{playerOne}</button>\n               const playerTwoButton = <button className=\"playerButton\">{playerTwo}</button>\n               return <h1 className=\"pairs\" key={index}>Match {matchOrder} : {playerOneButton} vs {playerTwoButton}</h1>\n          })\n\n          return (\n               <>\n                    <div>\n                         <div className=\"container\">\n                              <h1 className=\"header\">The Games are...</h1>\n                              {displayMatches}\n                         </div>\n                    </div>\n\n                    <div className=\"container\">\n                         <Button \n                              onClick={ this.handleShuffle }\n                              variant=\"outline-light\" \n                              className=\"shuffleButton\">\n                              Re-Shuffle\n                         </Button>\n                         <button className=\"shuffleButton\"><Link to=\"/Round\">Start Tournament</Link></button>\n                    </div>\n               </>\n          )\n     }\n};\n\nexport default Tournament;","import { connect } from 'react-redux';\nimport Tournament from './Tournament';\nimport {generateTeams} from \"../../data/actions/actions\"\nconst mapStateToProps = state => {\n     return {\n          teamA: state.teamA,\n          teamB: state.teamB,\n          players: state.players,\n          matches: state.matches\n     }\n};\n\nconst mapDispatchToProps = dispatch => {\n     return {\n          handleShuffle: () => dispatch(generateTeams()),\n     };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tournament);","import { Component } from \"react\";\nimport {Link} from \"react-router-dom\"\nclass Round extends Component {\n\n  playerNameClickHandler = (name) => {\n    if (this.props.winners.length === this.props.matches.length) {\n      return;\n    }\n    this.props.addWinner(name);\n    if (this.props.games === 1) {\n      this.props.endTournament();\n    }\n  };\n  generateWinners = () => this.props.generateWinners();\n\n  handleNextRound = () => {\n    this.props.generateWinners();\n  };\n\n  newTournament = () => {\n    this.props.newTournament();\n    window.location.reload()\n  }\n  render() {\n    let games = this.props.games;\n    let matches = this.props.matches;\n\n    const displayMatches = matches.map((match, index) => {\n      const matchOrder = index + 1;\n      const playerOne = match[0];\n      const playerTwo = match[1];\n      const playerOneButton = (\n        <button\n          onClick={() => this.playerNameClickHandler(playerOne)}\n          className=\"playerButton\"\n        >\n          {playerOne}\n        </button>\n      );\n      const playerTwoButton = (\n        <button\n          onClick={() => this.playerNameClickHandler(playerTwo)}\n          className=\"playerButton\"\n        >\n          {playerTwo}\n        </button>\n      );\n      return (\n        <h1 className=\"pairs\" key={index}>\n          Match {matchOrder} : {playerOneButton} vs {playerTwoButton}\n        </h1>\n      );\n    });\n\n    let nameArrayMap = this.props.winners\n      .slice(0, this.props.matches.length)\n      .map((name, index) => {\n        return (\n          <h1 key={index} className=\"pairs\">\n            {name}\n          </h1>\n        );\n      });\n    const howManyRounds = (games) => {\n      return games === 1\n        ? \"Final\"\n        : games === 2\n        ? \"Semi Finals\"\n        : games === 4\n        ? \"Quarter Finals\"\n        : `Tournament Is Underway`;\n    };\n    \n    return (\n      <>\n      {this.props.isEndTournament ? (\n        <>\n          <h1 className= \"winnersTag\">{this.props.winners[0]} has won the tournament!!</h1>\n          <video className=\"fireworks\"  muted autoPlay loop id=\"video\" playbackRate= \"0.5\">\n            <source src={process.env.PUBLIC_URL + \"/fireworks.mp4\"} type=\"video/mp4\"></source>\n            </video>\n            <h1 onClick={this.newTournament} className=\"restart\"><Link className=\"restart\" to=\"/PingPongTournamentGenerator\">Restart Tournament</Link></h1>\n            </>\n            ) : (\n              <>\n          <div className=\"initialRoundContainer\">\n          <h1 className=\"TournamentHeading\">{howManyRounds(games)}</h1>\n        <div>{displayMatches}</div>\n        <h1 className=\"TournamentHeading\">Select the winners names</h1>\n        <h1 className=\"TournamentHeading\">The Winners Are:</h1>\n        <h1 className=\"generateWinners\">{nameArrayMap}</h1>\n          <h1 onClick={this.handleNextRound } className=\"nextRound\">\n            Next Round\n          </h1>\n      </div>\n          </>\n        )}\n        </>\n    );\n  }\n}\n\nexport default Round;\n","import { connect } from \"react-redux\";\nimport {\n  endTournament,\n  generateInitialPairs,\n  generateWinners,\n  addWinner,\n  newTournament,\n} from \"../../data/actions/actions\";\nimport Round from \"./Round\";\nconst mapStateToProps = (state) => {\n  return {\n    players: state.players,\n    games: state.games,\n    matches: state.matches,\n    winners: state.winners,\n    round: state.round,\n    isEndTournament: state.isEndTournament,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    generateInitialPairs: () => dispatch(generateInitialPairs()),\n    generateWinners: () => dispatch(generateWinners()),\n    endTournament: () => dispatch(endTournament()),\n    addWinner: (winner) => dispatch(addWinner(winner)),\n    newTournament: () => dispatch(newTournament())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Round);\n","import {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport NameAdd from \"../NameAdd\"\nimport NameList from \"../NameList\"\nimport StarterPage from \"../StarterPage\"\nimport Tournament from \"../Tournament\"\nimport Round from \"../Round\"\nconst App = ({submitted}) => {\n\n    return (\n        <Router> \n        <>\n        <Route exact path=\"/PingPongTournamentGenerator\">\n        <StarterPage />\n        </Route>\n        </>\n        <Route exact path=\"/Settings\">\n        {!submitted ?\n            <>\n            <NameAdd />\n            <NameList />\n            </>\n            :\n            <>\n            <Tournament />\n            </>\n        }\n        </Route>\n        <Route path=\"/Round\" component={Round} /> \n    </Router>\n    )\n};\n\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport App from \"./App\";\nconst mapStateToProps = state => {\n    return {\n        submitted: state.submitted\n    }\n}\nexport default connect(mapStateToProps)(App);","const initial = {\n  players: [],\n  games: 0,\n  submitted: false,\n  startGame: false,\n  winner: 0,\n  matches: [],\n  winners: [],\n  round: false,\n  isEndTournament: false,\n};\n\nexport default initial;","import initial from \"./initial\";\n\nconst addPlayer = (state, action) => {\n  return {\n    ...state,\n    players: [...state.players, action.players],\n  };\n};\nconst startGame = (state) => {\n  return {\n    startGame: state.startGame,\n  };\n};\nconst clearList = () => ({\n  ...initial,\n});\n\nfunction removeLastItem(arr) {\n  arr.pop();\n  return arr;\n}\n\nconst deletePlayer = (state) => ({\n  ...state,\n  players: removeLastItem(state.players),\n});\n\n// Fisher-Yates Shuffle Method\nfunction shuffle(arr) {\n  for (let i = arr.length - 1; i > 0; i -= 1) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  return arr;\n}\n\nconst generateWinners = (state) => ({\n  ...state,\n  winners: [],\n  players: shuffle(state.winners),\n  round: true,\n  games: state.games - 1,\n  matches: state.winners.reduce(function (matches, value, index, winners) {\n    if (index % 2 === 0) matches.push(winners.slice(index, index + 2));\n    return matches;\n  }, []),\n});\n\nconst generateTeams = (state) => ({\n  ...state,\n  players: shuffle(state.players),\n  games: Math.log2(state.players.length),\n  submitted: true,\n  matches: state.players.reduce(function (matches, value, index, players) {\n    if (index % 2 === 0) matches.push(players.slice(index, index + 2));\n    return matches;\n  }, []),\n});\n\nconst reset = () => {\n    return {\n        ...initial,\n    }\n}\n\nconst reducer = (state, action) => {\n  // depending on what the actions type property is, we can do different things with it\n  switch (action.type) {\n    case \"addPlayer\":\n      return addPlayer(state, action);\n    case \"clearList\":\n      return clearList();\n    case \"generateTeams\":\n      return generateTeams(state, action);\n    case \"deletePlayer\":\n      return deletePlayer(state, action);\n    case \"startGame\":\n      return startGame(state, action);\n    case \"shuffle\":\n      return shuffle(state, action);\n    case \"generateWinners\":\n      return generateWinners(state, action);\n    case \"endTournament\":\n      return {\n        ...state,\n        isEndTournament: true,\n      };\n    case \"addWinner\":\n      return {\n        ...state,\n        winners: [...state.winners, action.winner],\n      };\n    case \"newTournament\": \n    return reset(state)\n    default:\n      return state;\n    // current state and the action object passed through from actions.js\n  }\n};\n\nexport default reducer;\n","\nimport { createStore, compose, applyMiddleware } from \"redux\"\nimport reducer from \"./reducer\"\nimport initial from \"./initial\"\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initial, composeEnhancers(applyMiddleware((thunk))));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./components/App\"\nimport store from \"./data/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}